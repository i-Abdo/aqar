
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Properties: Anyone can read active properties.
    // The owner can read their own properties regardless of status.
    // Authenticated users can create properties.
    // Only the owner can update/delete their own property.
    match /properties/{propertyId} {
      allow read: if resource.data.status == 'active' || request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }

    // Users: Can read, create, and update their own document.
    // Cannot delete their own document for data integrity.
    match /users/{userId} {
      allow read, create, update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // Prevent users from deleting their own user record.
    }

    // Reports: Authenticated users can create reports.
    // They cannot read/update/delete reports (even their own) to prevent tampering. This is for admins.
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // Admin-only
    }

    // User Issues: Authenticated users can create issues.
    // They cannot read/update/delete issues (even their own). This is for admins.
    match /user_issues/{issueId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // Admin-only
    }
    
    // Property Appeals: Authenticated users can create appeals.
    // They cannot read/update/delete appeals (even their own). This is for admins.
    match /property_appeals/{appealId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // Admin-only
    }

    // Subscribers & All Emails: Locked down. Should be managed by backend functions or admin.
    match /subscribers/{subscriberId} {
        allow read, write: if false; 
    }
    match /all-emails/{emailId} {
        allow read, write: if false;
    }
  }
}
